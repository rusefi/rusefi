//DO NOT EDIT MANUALLY, let automation work hard.

// auto-generated by PinoutLogic.java based on config/boards/KRC_ECU_V3/connectors/custom_firmware.yaml
#include "pch.h"

// see comments at declaration in pin_repository.h
const char * getBoardSpecificPinName(brain_pin_e brainPin) {
	switch(brainPin) {
		case Gpio::A10: return "UART_RX";
		case Gpio::A7: return "LOW1";
		case Gpio::A8: return "BOOST";
		case Gpio::A9: return "UART_TX";
		case Gpio::B12: return "EGT_CS";
		case Gpio::B15: return "LOW2";
		case Gpio::B3: return "LOW3";
		case Gpio::B4: return "LOW4";
		case Gpio::B7: return "FAN";
		case Gpio::B8: return "IDLE2";
		case Gpio::B9: return "IDLE1";
		case Gpio::C13: return "MAIN_RLY";
		case Gpio::D10: return "OUT_3A";
		case Gpio::D11: return "OUT_4A";
		case Gpio::D12: return "OUT_5A";
		case Gpio::D13: return "OUT_6A";
		case Gpio::D14: return "OUT_7A";
		case Gpio::D15: return "OUT_8A";
		case Gpio::D2: return "SD_CS";
		case Gpio::D3: return "CRANK";
		case Gpio::D4: return "CAM1";
		case Gpio::D5: return "CAM2";
		case Gpio::D6: return "VSS";
		case Gpio::D7: return "TACHO";
		case Gpio::D8: return "OUT_1A";
		case Gpio::D9: return "OUT_2A";
		case Gpio::E0: return "OUT_1B";
		case Gpio::E1: return "OUT_2B";
		case Gpio::E10: return "A/C_RLY";
		case Gpio::E11: return "FUEL_PUMP";
		case Gpio::E12: return "IN1";
		case Gpio::E13: return "IN2";
		case Gpio::E14: return "IN3";
		case Gpio::E15: return "IN4";
		case Gpio::E2: return "OUT_3B";
		case Gpio::E3: return "OUT_4B";
		case Gpio::E4: return "OUT_5B";
		case Gpio::E5: return "OUT_6B";
		case Gpio::E6: return "OUT_7B";
		case Gpio::E7: return "OUT_8B";
		case Gpio::E9: return "A/C_SW";
		default: return nullptr;
	}
	return nullptr;
}
