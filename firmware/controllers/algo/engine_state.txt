
struct_no_prefix engine_state_s
	struct LuaAdjustments
		float fuelAdd;Lua: Fuel add;"g", 1, 0, 0, 1, 3
		float fuelMult;Lua: Fuel mult;

		bit clutchUpState
		bit brakePedalState
		bit acRequestState
		bit luaDisableEtb
		bit luaIgnCut
		bit luaFuelCut
		bit clutchDownState
		bit disableDecelerationFuelCutOff
		bit torqueReductionState
	end_struct

	struct speed_density_s
		int16_t autoscale tCharge;Air: Charge temperature estimate;"deg C",{1/@@PACK_MULT_TEMPERATURE@@}, 0, 0, 0, 1
		float tChargeK;Air: Charge temperature estimate K
	end_struct

	struct cranking_fuel_s
		float coolantTemperatureCoefficient;Fuel: cranking CLT mult
		float tpsCoefficient;Fuel: cranking TPS mult
		uint16_t autoscale baseFuel;Fuel: Cranking cycle base mass;"mg",{1/@@PACK_MULT_FUEL_MASS@@}, 0, 0, 0, 2
		uint16_t autoscale fuel;Fuel: Cranking cycle mass;"mg",{1/@@PACK_MULT_FUEL_MASS@@}, 0, 0, 0, 2
	end_struct

	! Per-injection fuel mass, including TPS accel enrich
	float[MAX_CYLINDER_COUNT iterate] injectionMass

	LuaAdjustments lua
	speed_density_s sd;
	cranking_fuel_s crankingFuel

	float baroCorrection;@@GAUGE_NAME_FUEL_BARO_CORR@@

	custom percent_t 4 scalar, F32, @OFFSET@, "", 1, 0, 0, 100, 2

	int16_t hellenBoardId;Detected Board ID;"id", 1, 0, 0, 3000, 0

    ! huh: bit states are using a complete byte because SwitchedState helper class wants a reference
	int8_t clutchUpState;@@INDICATOR_NAME_CLUTCH_UP@@
	int8_t brakePedalState;@@INDICATOR_NAME_BRAKE_DOWN@@
	int8_t startStopState
	int8_t smartChipState
	int8_t smartChipRestartCounter
	int8_t smartChipAliveCounter
	bit startStopPhysicalState
  bit acrActive;Harley ACR Active
	bit acrEngineMovedRecently
	! same field is used for narrow band heater enable and wide band enable via CAN
	bit heaterControlEnabled
	bit luaDigitalState0
	bit luaDigitalState1
	bit luaDigitalState2
	bit luaDigitalState3
	bit clutchDownState;@@INDICATOR_NAME_CLUTCH_DOWN@@
	uint32_t startStopStateToggleCounter

	float currentVe
	float luaSoftSparkSkip
	float luaHardSparkSkip
	float tractionControlSparkSkip

	uint32_t fuelInjectionCounter;Fuel: Injection counter
	uint32_t globalSparkCounter;Ign: Spark counter

	! Values used for load axes for fuel/ign tables
	! These may or may not be the same value, depending on mode
	float fuelingLoad;@@GAUGE_NAME_FUEL_LOAD@@
	float ignitionLoad;@@GAUGE_NAME_IGNITION_LOAD@@

	uint16_t autoscale veTableYAxis;;"%",{1/100}, 0, 0, 0, 0
	uint8_t overDwellCounter
	uint8_t overDwellNotScheduledCounter
	uint8_t sparkOutOfOrderCounter

	! todo: extract to injection.txt?
	float[FT_BANK_COUNT iterate] stftCorrection;STFT: Bank; "%", 100, -1.0, 50, 150, 1
	float[FT_BANK_COUNT iterate] ltftCorrection;LTFT: Bank; "%", 100, -1.0, 50, 150, 1

! engine_state_s
end_struct
