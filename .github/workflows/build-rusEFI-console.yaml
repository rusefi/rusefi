name: rusEFI console

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Checkout Submodules Without ChibiOS
        run: |
          misc/git_scripts/common_submodule_init_without_chibios.sh

      # as of 2025 TS unfortunately still uses java 8
      # we use JDK11 but sourceCompatibility/targetCompatibility 8 so that rusEFI TS plugin is compatible with TS
      #  [tag:java8]
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Test Compiler
        run: javac -version

      - name: Install Tools
        run: |
          sudo bash misc/actions/add-ubuntu-latest-apt-mirrors.sh
          sudo bash misc/actions/ubuntu-install-tools.sh

      - name: Build All Java
        working-directory: ./java_tools/
        run: |
          ./gradlew jar :config_definition_base:shadowJar :enum_to_string:shadowJar

      - name: Generate Enums & Live Documentation
        working-directory: ./firmware/
        run: ./gen_live_documentation.sh

      - name: Print GCC version
        run: gcc -v

      - name: All Java Tests
        # at the moment 'jar' task does not depend on tests?! maybe because tests take some time?
        working-directory: ./java_tools
        run: ./gradlew test

      - name: Publish Gradle Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          detailed_summary: true

      - name: Attach Gradle junit results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gradle junit
          path: '**/build/test-results/test/TEST-*.xml'

      # this job focuses of tool validation so we do not push fresh enums here
      - name: Generate Enums using freshly compiled tool
        working-directory: ./firmware/
        run: ./gen_enum_to_string.sh

      - name: Upload rusEFI server
        working-directory: .
        run: java_console/upload_file.sh ${{ secrets.RUSEFI_SSH_USER }} ${{ secrets.RUSEFI_SSH_PASS }} ${{ secrets.RUSEFI_SSH_SERVER }} build_server/autoupdate console/rusefi_server.jar
